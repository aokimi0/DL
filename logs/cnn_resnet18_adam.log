Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Running Experiment: resnet18_adam
Using device: cuda
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Using 7 GPUs!
Model Architecture:
DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (linear): Linear(in_features=512, out_features=10, bias=True)
  )
)

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    decoupled_weight_decay: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.322034
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.391055
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.372331
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.287244
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.479748
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.412826
Train Epoch: 1 [0/50000 (0%)]	Loss: 2.419286
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.445483
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.279770
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.338111
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.471711
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.482030
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.218078
Train Epoch: 1 [25600/50000 (51%)]	Loss: 1.297482

Validation set: Average loss: 1.2074, Accuracy: 5720/10000 (57%)

Train Epoch: 2 [0/50000 (0%)]	Loss: 1.108290

Validation set: Average loss: 1.0717, Accuracy: 6156/10000 (62%)


Validation set: Average loss: 1.2027, Accuracy: 5741/10000 (57%)

Train Epoch: 2 [0/50000 (0%)]	Loss: 1.107035

Validation set: Average loss: 1.2127, Accuracy: 5841/10000 (58%)


Validation set: Average loss: 1.5320, Accuracy: 4982/10000 (50%)

Train Epoch: 2 [0/50000 (0%)]	Loss: 1.113031

Validation set: Average loss: 1.2672, Accuracy: 5463/10000 (55%)


Validation set: Average loss: 1.4872, Accuracy: 5127/10000 (51%)

Train Epoch: 2 [0/50000 (0%)]	Loss: 1.137694
Train Epoch: 2 [0/50000 (0%)]	Loss: 1.159154
Train Epoch: 2 [0/50000 (0%)]	Loss: 1.103179
Train Epoch: 2 [0/50000 (0%)]	Loss: 0.936368
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.836061
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.839140
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.898791
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.983944
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.909374
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.919918
Train Epoch: 2 [25600/50000 (51%)]	Loss: 0.882730

Validation set: Average loss: 0.8416, Accuracy: 7174/10000 (72%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.626979

Validation set: Average loss: 0.7891, Accuracy: 7193/10000 (72%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.614285

Validation set: Average loss: 1.1103, Accuracy: 6147/10000 (61%)


Validation set: Average loss: 0.9830, Accuracy: 6662/10000 (67%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.794194

Validation set: Average loss: 0.9089, Accuracy: 6865/10000 (69%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.721159

Validation set: Average loss: 1.0606, Accuracy: 6257/10000 (63%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.712028

Validation set: Average loss: 1.0139, Accuracy: 6687/10000 (67%)

Train Epoch: 3 [0/50000 (0%)]	Loss: 0.685968
Train Epoch: 3 [0/50000 (0%)]	Loss: 0.642363
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.565758
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.593573
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.556960
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.581285
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.729072
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.599844
Train Epoch: 3 [25600/50000 (51%)]	Loss: 0.812046

Validation set: Average loss: 0.8866, Accuracy: 7028/10000 (70%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.488301

Validation set: Average loss: 0.6828, Accuracy: 7633/10000 (76%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.473352

Validation set: Average loss: 0.7931, Accuracy: 7301/10000 (73%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.485181

Validation set: Average loss: 0.8328, Accuracy: 7245/10000 (72%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.482122

Validation set: Average loss: 0.8678, Accuracy: 7209/10000 (72%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.467030

Validation set: Average loss: 0.7063, Accuracy: 7480/10000 (75%)


Validation set: Average loss: 0.7412, Accuracy: 7432/10000 (74%)

Train Epoch: 4 [0/50000 (0%)]	Loss: 0.418193
Train Epoch: 4 [0/50000 (0%)]	Loss: 0.578901
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.509655
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.567108
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.566763
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.481417
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.457215
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.531209
Train Epoch: 4 [25600/50000 (51%)]	Loss: 0.442191

Validation set: Average loss: 0.6083, Accuracy: 7870/10000 (79%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.448995

Validation set: Average loss: 0.9860, Accuracy: 6744/10000 (67%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.401792

Validation set: Average loss: 0.6346, Accuracy: 7802/10000 (78%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.452501

Validation set: Average loss: 0.7027, Accuracy: 7702/10000 (77%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.465437

Validation set: Average loss: 0.5903, Accuracy: 7987/10000 (80%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.364503

Validation set: Average loss: 0.6436, Accuracy: 7842/10000 (78%)


Validation set: Average loss: 0.9427, Accuracy: 7132/10000 (71%)

Train Epoch: 5 [0/50000 (0%)]	Loss: 0.399351
Train Epoch: 5 [0/50000 (0%)]	Loss: 0.440091
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.372803
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.371386
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.419383
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.433969
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.390340
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.499125
Train Epoch: 5 [25600/50000 (51%)]	Loss: 0.431642

Validation set: Average loss: 0.6648, Accuracy: 7818/10000 (78%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.352479

Validation set: Average loss: 0.5925, Accuracy: 8050/10000 (80%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.322635

Validation set: Average loss: 0.7276, Accuracy: 7601/10000 (76%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.344743

Validation set: Average loss: 0.5371, Accuracy: 8159/10000 (82%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.262596

Validation set: Average loss: 0.7589, Accuracy: 7543/10000 (75%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.397354

Validation set: Average loss: 0.6387, Accuracy: 7872/10000 (79%)


Validation set: Average loss: 0.5866, Accuracy: 8008/10000 (80%)

Train Epoch: 6 [0/50000 (0%)]	Loss: 0.274731
Train Epoch: 6 [0/50000 (0%)]	Loss: 0.314559
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.253483
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.280821
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.317576
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.246520
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.439296
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.280168
Train Epoch: 6 [25600/50000 (51%)]	Loss: 0.492595

Validation set: Average loss: 0.7052, Accuracy: 7761/10000 (78%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.234163

Validation set: Average loss: 0.5495, Accuracy: 8192/10000 (82%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.227224

Validation set: Average loss: 0.9456, Accuracy: 7313/10000 (73%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.242601

Validation set: Average loss: 0.6119, Accuracy: 8014/10000 (80%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.304694

Validation set: Average loss: 0.5308, Accuracy: 8268/10000 (83%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.204874

Validation set: Average loss: 0.6657, Accuracy: 7935/10000 (79%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.347111

Validation set: Average loss: 0.5808, Accuracy: 8071/10000 (81%)

Train Epoch: 7 [0/50000 (0%)]	Loss: 0.237595
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.234359
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.209058
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.286755
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.287385
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.230060
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.268079
Train Epoch: 7 [25600/50000 (51%)]	Loss: 0.358239

Validation set: Average loss: 0.6154, Accuracy: 8078/10000 (81%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.116551

Validation set: Average loss: 0.6026, Accuracy: 8116/10000 (81%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.121722

Validation set: Average loss: 0.6902, Accuracy: 7927/10000 (79%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.241767

Validation set: Average loss: 0.6159, Accuracy: 8094/10000 (81%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.131974

Validation set: Average loss: 0.7778, Accuracy: 7678/10000 (77%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.192540

Validation set: Average loss: 0.8768, Accuracy: 7423/10000 (74%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.228724

Validation set: Average loss: 0.6452, Accuracy: 8057/10000 (81%)

Train Epoch: 8 [0/50000 (0%)]	Loss: 0.126237
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.208933
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.170781
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.175516
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.197357
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.182472
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.242526
Train Epoch: 8 [25600/50000 (51%)]	Loss: 0.142976

Validation set: Average loss: 0.6950, Accuracy: 8053/10000 (81%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.140273

Validation set: Average loss: 0.5672, Accuracy: 8314/10000 (83%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.118324

Validation set: Average loss: 0.5727, Accuracy: 8232/10000 (82%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.163288

Validation set: Average loss: 0.7046, Accuracy: 7989/10000 (80%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.120688

Validation set: Average loss: 0.7439, Accuracy: 8059/10000 (81%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.158611

Validation set: Average loss: 0.8816, Accuracy: 7560/10000 (76%)


Validation set: Average loss: 0.6352, Accuracy: 8208/10000 (82%)

Train Epoch: 9 [0/50000 (0%)]	Loss: 0.173368
Train Epoch: 9 [0/50000 (0%)]	Loss: 0.182625
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.145832
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.129868
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.120761
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.125369
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.173390
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.163959
Train Epoch: 9 [25600/50000 (51%)]	Loss: 0.116134

Validation set: Average loss: 0.5997, Accuracy: 8285/10000 (83%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.094641

Validation set: Average loss: 0.8133, Accuracy: 7963/10000 (80%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.075895

Validation set: Average loss: 0.8092, Accuracy: 7905/10000 (79%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.131625

Validation set: Average loss: 0.6617, Accuracy: 8193/10000 (82%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.135462

Validation set: Average loss: 0.6096, Accuracy: 8335/10000 (83%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.112508

Validation set: Average loss: 0.5983, Accuracy: 8286/10000 (83%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.075730

Validation set: Average loss: 0.5981, Accuracy: 8267/10000 (83%)

Train Epoch: 10 [0/50000 (0%)]	Loss: 0.090146
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.098053
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.064700
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.157577
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.152842
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.120441
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.047500
Train Epoch: 10 [25600/50000 (51%)]	Loss: 0.106287

Validation set: Average loss: 0.7802, Accuracy: 8053/10000 (81%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth

Validation set: Average loss: 0.6841, Accuracy: 8196/10000 (82%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth

Validation set: Average loss: 0.6876, Accuracy: 8339/10000 (83%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth

Validation set: Average loss: 0.5986, Accuracy: 8394/10000 (84%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth

Validation set: Average loss: 0.6420, Accuracy: 8309/10000 (83%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth

Validation set: Average loss: 0.8787, Accuracy: 7810/10000 (78%)

性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png

Validation set: Average loss: 0.7301, Accuracy: 8150/10000 (82%)

Model saved to out/cnn/resnet18_adam/model.pth
性能图表已保存至: fig/cnn/resnet18_adam/performance_resnet18_adam.png
Model saved to out/cnn/resnet18_adam/model.pth
